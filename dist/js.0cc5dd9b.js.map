{"version":3,"sources":["js/index.js"],"names":["particlesArray","canvas","document","getElementById","context","getContext","width","window","innerWidth","height","innerHeight","mouse","x","y","radius","addEventListener","event","Particle","directionX","directionY","size","color","beginPath","arc","Math","PI","fillStyle","fill","dx","dy","sqrt","draw","init","particles","i","random","push","connect","opacityValue","a","length","b","distance","strokeStyle","lineWidth","moveTo","lineTo","stroke","animate","requestAnimationFrame","clearRect","update","undefined"],"mappings":";AAgIO,SAAA,EAAA,EAAA,GAAA,KAAA,aAAA,GAAA,MAAA,IAAA,UAAA,qCAAA,SAAA,EAAA,EAAA,GAAA,IAAA,IAAA,EAAA,EAAA,EAAA,EAAA,OAAA,IAAA,CAAA,IAAA,EAAA,EAAA,GAAA,EAAA,WAAA,EAAA,aAAA,EAAA,EAAA,cAAA,EAAA,UAAA,IAAA,EAAA,UAAA,GAAA,OAAA,eAAA,EAAA,EAAA,IAAA,IAAA,SAAA,EAAA,EAAA,EAAA,GAAA,OAAA,GAAA,EAAA,EAAA,UAAA,GAAA,GAAA,EAAA,EAAA,GAAA,EAhIP,IAKIA,EALEC,EAASC,SAASC,eAAe,WACjCC,EAAUH,EAAOI,WAAW,MAClCJ,EAAOK,MAAQC,OAAOC,WACtBP,EAAOQ,OAASF,OAAOG,YAIvB,IAAIC,EAAQ,CACRC,EAAE,KACFC,EAAE,KACFC,OAASb,EAAOQ,OAAO,IAAOR,EAAOK,MAAM,KAG/CC,OAAOQ,iBAAiB,YACpB,SAASC,GACLL,EAAMC,EAAII,EAAMJ,EAChBD,EAAME,EAAIG,EAAMH,IAIlBI,IAAAA,EAAAA,WACUL,SAAAA,EAAAA,EAAGC,EAAGK,EAAYC,EAAYC,EAAMC,GAAO,EAAA,KAAA,GAC9CT,KAAAA,EAAIA,EACJC,KAAAA,EAAIA,EACJK,KAAAA,WAAaA,EACbC,KAAAA,WAAaA,EACbC,KAAAA,KAAOA,EACPC,KAAAA,MAAQA,EAqGd,OAAA,EAAA,EAAA,CAAA,CAAA,IAAA,OAlGI,MAAA,WACHjB,EAAQkB,YACRlB,EAAQmB,IAAI,KAAKX,EAAG,KAAKC,EAAG,KAAKO,KAAM,EAAa,EAAVI,KAAKC,IAAQ,GACvDrB,EAAQsB,UAAY,UACpBtB,EAAQuB,SA8FT,CAAA,IAAA,SA3FM,MAAA,YACF,KAAKf,EAAIX,EAAOK,OAAS,KAAKM,EAAI,KAC5BM,KAAAA,YAAc,KAAKA,aAGzB,KAAKL,EAAIZ,EAAOK,OAAS,KAAKO,EAAI,KAC5BM,KAAAA,YAAc,KAAKA,YAGxBS,IAAAA,EAAKjB,EAAMC,EAAI,KAAKA,EACpBiB,EAAKlB,EAAME,EAAI,KAAKA,EACTW,KAAKM,KAAKF,EAAGA,EAAKC,EAAGA,GAErBlB,EAAMG,OAAS,KAAKM,OAC3BT,EAAMC,EAAI,KAAKA,GAAK,KAAKA,EAAIX,EAAOK,MAAoB,GAAZ,KAAKc,OAC5CR,KAAAA,GAAK,IAEVD,EAAMC,EAAI,KAAKA,GAAK,KAAKA,EAAgB,GAAZ,KAAKQ,OAC7BR,KAAAA,GAAK,IAEVD,EAAME,EAAI,KAAKA,GAAK,KAAKA,EAAIZ,EAAOQ,OAAqB,GAAZ,KAAKW,OAC7CP,KAAAA,GAAK,IAEVF,EAAME,EAAI,KAAKA,GAAK,KAAKA,EAAgB,GAAZ,KAAKO,OAC7BP,KAAAA,GAAK,KAGbD,KAAAA,GAAK,KAAKM,WACVL,KAAAA,GAAK,KAAKM,WACVY,KAAAA,WA8DN,EA5GDd,GAkDN,SAASe,IACLhC,EAAiB,GAEZ,IADDiC,IAAAA,EAAahC,EAAOQ,OAASR,EAAOK,MAAS,IACxC4B,EAAI,EAAGA,EAAID,EAAWC,IAAK,CAC5Bd,IAAAA,EAAwB,EAAhBI,KAAKW,SAAgB,EAC7BvB,EAAKY,KAAKW,UAAa3B,WAAoB,EAAPY,EAAoB,EAAPA,GAAoB,EAAPA,EAC9DP,EAAKW,KAAKW,UAAazB,YAAqB,EAAPU,EAAoB,EAAPA,GAAoB,EAAPA,EAC/DF,EAA8B,EAAhBM,KAAKW,SAAgB,IACnChB,EAA8B,EAAhBK,KAAKW,SAAgB,IAGvCnC,EAAeoC,KAAK,IAAInB,EAASL,EAAGC,EAAGK,EAAYC,EAAYC,EAFnD,aAMpB,SAASiB,IAED,IADAC,IAAAA,EAAe,EACXC,EAAI,EAAGA,EAAIvC,EAAewC,OAAQD,IAClC,IAAA,IAAIE,EAAIF,EAAGE,EAAIzC,EAAewC,OAAQC,IAAK,CACvCC,IAAAA,GAAc1C,EAAeuC,GAAG3B,EAAIZ,EAAeyC,GAAG7B,IAAQZ,EAAeuC,GAAG3B,EAAIZ,EAAeyC,GAAG7B,IACtGZ,EAAeuC,GAAG1B,EAAIb,EAAeyC,GAAG5B,IAAMb,EAAeuC,GAAG1B,EAAIb,EAAeyC,GAAG5B,GACtF6B,EAAazC,EAAOK,MAAM,IAAOL,EAAOQ,OAAO,MAC/C6B,EAAe,EAAKI,EAAS,IAC7BtC,EAAQuC,YAAc,oBAAsBL,EAAe,IAC3DlC,EAAQwC,UAAY,EACpBxC,EAAQkB,YACRlB,EAAQyC,OAAO7C,EAAeuC,GAAG3B,EAAGZ,EAAeuC,GAAG1B,GACtDT,EAAQ0C,OAAO9C,EAAeyC,GAAG7B,EAAGZ,EAAeyC,GAAG5B,GACtDT,EAAQ2C,WAMxB,SAASC,IACLC,sBAAsBD,GACtB5C,EAAQ8C,UAAU,EAAG,EAAG1C,WAAYE,aAE/B,IAAA,IAAIwB,EAAI,EAAGA,EAAIlC,EAAewC,OAAQN,IACvClC,EAAekC,GAAGiB,SAGtBd,IAGJ9B,OAAOQ,iBAAiB,SAAU,WAC9Bd,EAAOK,MAAQE,WACfP,EAAOQ,OAASC,YAChBC,EAAMG,OAAWb,EAAOK,MAAM,IAAOL,EAAOQ,OAAO,IACnDuB,MAGJzB,OAAOQ,iBAAiB,WAAY,WAChCJ,EAAMC,OAAIwC,EACVzC,EAAME,OAAIuC,IAGdpB,IACAgB","file":"js.0cc5dd9b.js","sourceRoot":"../app","sourcesContent":["const canvas = document.getElementById(\"canvas1\")\nconst context = canvas.getContext('2d')\ncanvas.width = window.innerWidth;\ncanvas.height = window.innerHeight;\n\nlet particlesArray;\n\nlet mouse = {\n    x:null,\n    y:null,\n    radius: (canvas.height/80) * (canvas.width/80)\n}\n\nwindow.addEventListener('mousemove',\n    function(event){\n        mouse.x = event.x;\n        mouse.y = event.y;\n    }\n);\n\nclass Particle {\n    constructor(x, y, directionX, directionY, size, color) {\n        this.x = x;\n        this.y = y;\n        this.directionX = directionX;\n        this.directionY = directionY;\n        this.size = size;\n        this.color = color;\n    }\n\n    draw() {\n        context.beginPath();\n        context.arc(this.x, this.y, this.size, 0, Math.PI * 2, false);\n        context.fillStyle = '#5b5858';\n        context.fill();\n    }\n\n    update() {\n        if(this.x > canvas.width || this.x < 0) {\n            this.directionX = -this.directionX;\n        }\n\n        if(this.y > canvas.width || this.y < 0) {\n            this.directionY = -this.directionY;\n        }\n\n        let dx = mouse.x - this.x;\n        let dy = mouse.y - this.y;\n        let distance = Math.sqrt(dx*dx + dy*dy);\n\n        if (distance < mouse.radius + this.size) {\n            if (mouse.x < this.x && this.x < canvas.width - this.size * 10) {\n                this.x += 10;\n            }  \n            if (mouse.x > this.x && this.x > this.size * 10) {\n                this.x -= 10;\n            }\n            if (mouse.y < this.y && this.y < canvas.height - this.size * 10) {\n                this.y += 10;\n            } \n            if (mouse.y > this.y && this.y > this.size * 10) {\n                this.y -= 10;\n            }\n        }\n        this.x += this.directionX;\n        this.y += this.directionY;\n        this.draw();\n    }\n}\n\nfunction init() {\n    particlesArray = [];\n    let particles = (canvas.height * canvas.width) / 50000;\n    for (let i = 0; i < particles; i++) {\n        let size = (Math.random() * 5) + 1;\n        let x = (Math.random() * ((innerWidth - size * 2) - (size * 2)) + size * 2);\n        let y = (Math.random() * ((innerHeight - size * 2) - (size * 2)) + size * 2);\n        let directionX = (Math.random() * 5) - 2.5;\n        let directionY = (Math.random() * 5) - 2.5;\n        let color = '#5b5858';\n\n        particlesArray.push(new Particle(x, y, directionX, directionY, size, color));\n    }\n}\n\nfunction connect() {\n    let opacityValue = 1;\n    for(let a = 0; a < particlesArray.length; a++) {\n        for(let b = a; b < particlesArray.length; b++) {\n            let distance = (( particlesArray[a].x - particlesArray[b].x ) * ( particlesArray[a].x - particlesArray[b].x ))\n            + ((particlesArray[a].y - particlesArray[b].y) * (particlesArray[a].y - particlesArray[b].y));\n            if (distance < ((canvas.width/11) * (canvas.height/11))){\n                opacityValue = 1 - (distance/20000);\n                context.strokeStyle = 'rgba( 91, 88, 88,' + opacityValue + ')';\n                context.lineWidth = 1;\n                context.beginPath();\n                context.moveTo(particlesArray[a].x, particlesArray[a].y);\n                context.lineTo(particlesArray[b].x, particlesArray[b].y);\n                context.stroke();\n            }\n        }\n    }\n}\n\nfunction animate() {\n    requestAnimationFrame(animate);\n    context.clearRect(0, 0, innerWidth, innerHeight);\n\n    for (let i = 0; i < particlesArray.length; i++) {\n        particlesArray[i].update();\n    }\n\n    connect();\n}\n\nwindow.addEventListener('resize', function(){\n    canvas.width = innerWidth;\n    canvas.height = innerHeight;\n    mouse.radius = ((canvas.width/80) * (canvas.height/80));\n    init();\n});\n\nwindow.addEventListener('mouseout', function(){\n    mouse.x = undefined;\n    mouse.y = undefined;\n});\n\ninit();\nanimate();\n"]}